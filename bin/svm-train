#!/usr/bin/env python

import svmpy
import logging
import numpy as np
import argh


def train_example(dimension=3, file_path="data_txt/classify_d3_k2_saved3_train.txt"):
    # read the X and y value from the file
    X = np.genfromtxt(file_path, usecols=(range(dimension)))
    y = np.genfromtxt(file_path, usecols=(dimension,)).reshape((-1, 1))
    # replace all the y value to -1 if it equals to 2
    y[y == 2.] = -1.
    # convert array to matrix
    samples = np.matrix(X)
    labels = np.matrix(y)

    # initialize the training model
    trainer = svmpy.SVMTrainer(svmpy.Kernel.gaussian(0.3), 100)
    # train the model and store the model to the predictor
    model = trainer.train(samples, labels)
    # write the model to the txt file
    svmpy.SVMTrainer.write_model(model)
    # plot(predictor, samples, labels, 30, "svm.pdf")


if __name__ == "__main__":
    logging.basicConfig(level=logging.ERROR)
    argh.dispatch_command(train_example)
